/* Generated by Yosys 0.34+27 (git sha1 7d30f716e, clang 14.0.0-1ubuntu1.1 -fPIC -Os) */

module pes_elevator(request_floor, in_current_floor, clk, reset, complete, direction, over_time, over_weight, weight_alert, door_alert, out_current_floor);
  wire [7:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  input clk;
  wire clk;
  output complete;
  wire complete;
  output direction;
  wire direction;
  output door_alert;
  wire door_alert;
  input [7:0] in_current_floor;
  wire [7:0] in_current_floor;
  output [7:0] out_current_floor;
  wire [7:0] out_current_floor;
  input over_time;
  wire over_time;
  input over_weight;
  wire over_weight;
  reg r_complete;
  reg r_direction;
  reg r_door_alert;
  reg [7:0] r_out_current_floor;
  reg r_weight_alert;
  input [7:0] request_floor;
  wire [7:0] request_floor;
  input reset;
  wire reset;
  output weight_alert;
  wire weight_alert;
  sky130_fd_sc_hd__clkinv_1 _144_ (
    .A(_138_),
    .Y(_083_)
  );
  sky130_fd_sc_hd__clkinv_1 _145_ (
    .A(_136_),
    .Y(_084_)
  );
  sky130_fd_sc_hd__nor2b_1 _146_ (
    .A(_132_),
    .B_N(_140_),
    .Y(_085_)
  );
  sky130_fd_sc_hd__nor2b_1 _147_ (
    .A(_134_),
    .B_N(_142_),
    .Y(_086_)
  );
  sky130_fd_sc_hd__nor2b_1 _148_ (
    .A(_142_),
    .B_N(_134_),
    .Y(_087_)
  );
  sky130_fd_sc_hd__xor2_1 _149_ (
    .A(_141_),
    .B(_133_),
    .X(_088_)
  );
  sky130_fd_sc_hd__nor4_1 _150_ (
    .A(_085_),
    .B(_086_),
    .C(_087_),
    .D(_088_),
    .Y(_089_)
  );
  sky130_fd_sc_hd__nor2b_1 _151_ (
    .A(_137_),
    .B_N(_129_),
    .Y(_090_)
  );
  sky130_fd_sc_hd__nor2b_1 _152_ (
    .A(_129_),
    .B_N(_137_),
    .Y(_091_)
  );
  sky130_fd_sc_hd__xor2_1 _153_ (
    .A(_138_),
    .B(_130_),
    .X(_092_)
  );
  sky130_fd_sc_hd__nor3_1 _154_ (
    .A(_090_),
    .B(_091_),
    .C(_092_),
    .Y(_093_)
  );
  sky130_fd_sc_hd__nor2b_1 _155_ (
    .A(_131_),
    .B_N(_139_),
    .Y(_094_)
  );
  sky130_fd_sc_hd__nor2b_1 _156_ (
    .A(_140_),
    .B_N(_132_),
    .Y(_095_)
  );
  sky130_fd_sc_hd__nand2b_1 _157_ (
    .A_N(_127_),
    .B(_135_),
    .Y(_096_)
  );
  sky130_fd_sc_hd__o21ai_0 _158_ (
    .A1(_084_),
    .A2(_128_),
    .B1(_096_),
    .Y(_097_)
  );
  sky130_fd_sc_hd__nor2b_1 _159_ (
    .A(_135_),
    .B_N(_127_),
    .Y(_098_)
  );
  sky130_fd_sc_hd__nor2b_1 _160_ (
    .A(_139_),
    .B_N(_131_),
    .Y(_099_)
  );
  sky130_fd_sc_hd__a2111oi_0 _161_ (
    .A1(_084_),
    .A2(_128_),
    .B1(_094_),
    .C1(_095_),
    .D1(_099_),
    .Y(_100_)
  );
  sky130_fd_sc_hd__nand3_1 _162_ (
    .A(_089_),
    .B(_093_),
    .C(_100_),
    .Y(_101_)
  );
  sky130_fd_sc_hd__nor3_1 _163_ (
    .A(_097_),
    .B(_098_),
    .C(_101_),
    .Y(_070_)
  );
  sky130_fd_sc_hd__nor2_1 _164_ (
    .A(_125_),
    .B(_126_),
    .Y(_102_)
  );
  sky130_fd_sc_hd__nor4_1 _165_ (
    .A(_143_),
    .B(_097_),
    .C(_098_),
    .D(_101_),
    .Y(_103_)
  );
  sky130_fd_sc_hd__nand2_1 _166_ (
    .A(_102_),
    .B(_103_),
    .Y(_067_)
  );
  sky130_fd_sc_hd__nor2b_1 _167_ (
    .A(_143_),
    .B_N(_125_),
    .Y(_071_)
  );
  sky130_fd_sc_hd__nor2b_1 _168_ (
    .A(_143_),
    .B_N(_126_),
    .Y(_072_)
  );
  sky130_fd_sc_hd__nor2_1 _169_ (
    .A(_143_),
    .B(_102_),
    .Y(_104_)
  );
  sky130_fd_sc_hd__clkinv_1 _170_ (
    .A(_104_),
    .Y(_066_)
  );
  sky130_fd_sc_hd__nor2_1 _171_ (
    .A(_103_),
    .B(_104_),
    .Y(_068_)
  );
  sky130_fd_sc_hd__nand2b_1 _172_ (
    .A_N(_125_),
    .B(_072_),
    .Y(_069_)
  );
  sky130_fd_sc_hd__maj3_1 _173_ (
    .A(_084_),
    .B(_128_),
    .C(_096_),
    .X(_105_)
  );
  sky130_fd_sc_hd__maj3_1 _174_ (
    .A(_083_),
    .B(_130_),
    .C(_090_),
    .X(_106_)
  );
  sky130_fd_sc_hd__a211oi_1 _175_ (
    .A1(_093_),
    .A2(_105_),
    .B1(_106_),
    .C1(_099_),
    .Y(_107_)
  );
  sky130_fd_sc_hd__o21bai_1 _176_ (
    .A1(_094_),
    .A2(_107_),
    .B1_N(_095_),
    .Y(_108_)
  );
  sky130_fd_sc_hd__nor3b_1 _177_ (
    .A(_141_),
    .B(_086_),
    .C_N(_133_),
    .Y(_109_)
  );
  sky130_fd_sc_hd__a211oi_1 _178_ (
    .A1(_089_),
    .A2(_108_),
    .B1(_109_),
    .C1(_087_),
    .Y(_110_)
  );
  sky130_fd_sc_hd__nor2_1 _179_ (
    .A(_143_),
    .B(_110_),
    .Y(_111_)
  );
  sky130_fd_sc_hd__a22o_1 _180_ (
    .A1(_143_),
    .A2(_074_),
    .B1(_111_),
    .B2(_128_),
    .X(_058_)
  );
  sky130_fd_sc_hd__nand2_1 _181_ (
    .A(_143_),
    .B(_075_),
    .Y(_112_)
  );
  sky130_fd_sc_hd__mux2i_1 _182_ (
    .A0(_129_),
    .A1(_127_),
    .S(_110_),
    .Y(_113_)
  );
  sky130_fd_sc_hd__o21ai_0 _183_ (
    .A1(_143_),
    .A2(_113_),
    .B1(_112_),
    .Y(_059_)
  );
  sky130_fd_sc_hd__nand2_1 _184_ (
    .A(_143_),
    .B(_076_),
    .Y(_114_)
  );
  sky130_fd_sc_hd__mux2i_1 _185_ (
    .A0(_130_),
    .A1(_128_),
    .S(_110_),
    .Y(_115_)
  );
  sky130_fd_sc_hd__o21ai_0 _186_ (
    .A1(_143_),
    .A2(_115_),
    .B1(_114_),
    .Y(_060_)
  );
  sky130_fd_sc_hd__nand2_1 _187_ (
    .A(_143_),
    .B(_077_),
    .Y(_116_)
  );
  sky130_fd_sc_hd__mux2i_1 _188_ (
    .A0(_131_),
    .A1(_129_),
    .S(_110_),
    .Y(_117_)
  );
  sky130_fd_sc_hd__o21ai_0 _189_ (
    .A1(_143_),
    .A2(_117_),
    .B1(_116_),
    .Y(_061_)
  );
  sky130_fd_sc_hd__nand2_1 _190_ (
    .A(_143_),
    .B(_078_),
    .Y(_118_)
  );
  sky130_fd_sc_hd__mux2i_1 _191_ (
    .A0(_132_),
    .A1(_130_),
    .S(_110_),
    .Y(_119_)
  );
  sky130_fd_sc_hd__o21ai_0 _192_ (
    .A1(_143_),
    .A2(_119_),
    .B1(_118_),
    .Y(_062_)
  );
  sky130_fd_sc_hd__nand2_1 _193_ (
    .A(_143_),
    .B(_079_),
    .Y(_120_)
  );
  sky130_fd_sc_hd__mux2i_1 _194_ (
    .A0(_133_),
    .A1(_131_),
    .S(_110_),
    .Y(_121_)
  );
  sky130_fd_sc_hd__o21ai_0 _195_ (
    .A1(_143_),
    .A2(_121_),
    .B1(_120_),
    .Y(_063_)
  );
  sky130_fd_sc_hd__nand2_1 _196_ (
    .A(_143_),
    .B(_080_),
    .Y(_122_)
  );
  sky130_fd_sc_hd__mux2i_1 _197_ (
    .A0(_134_),
    .A1(_132_),
    .S(_110_),
    .Y(_123_)
  );
  sky130_fd_sc_hd__o21ai_0 _198_ (
    .A1(_143_),
    .A2(_123_),
    .B1(_122_),
    .Y(_064_)
  );
  sky130_fd_sc_hd__nand2_1 _199_ (
    .A(_143_),
    .B(_081_),
    .Y(_124_)
  );
  sky130_fd_sc_hd__nand3b_1 _200_ (
    .A_N(_143_),
    .B(_133_),
    .C(_110_),
    .Y(_082_)
  );
  sky130_fd_sc_hd__nand2_1 _201_ (
    .A(_124_),
    .B(_082_),
    .Y(_065_)
  );
  sky130_fd_sc_hd__nor2_1 _202_ (
    .A(_104_),
    .B(_111_),
    .Y(_073_)
  );
  /*abcd */
  always @(posedge clk)
    if (_003_) r_out_current_floor[0] <= _000_[0];
  always @(posedge clk)
    if (_003_) r_out_current_floor[1] <= _000_[1];
  always @(posedge clk)
    if (_003_) r_out_current_floor[2] <= _000_[2];
  always @(posedge clk)
    if (_003_) r_out_current_floor[3] <= _000_[3];
  always @(posedge clk)
    if (_003_) r_out_current_floor[4] <= _000_[4];
  always @(posedge clk)
    if (_003_) r_out_current_floor[5] <= _000_[5];
  always @(posedge clk)
    if (_003_) r_out_current_floor[6] <= _000_[6];
  always @(posedge clk)
    if (_003_) r_out_current_floor[7] <= _000_[7];
  always @(posedge clk)
    if (reset) r_direction <= 1'h1;
    else r_direction <= _057_;
  always @(posedge clk)
    if (_002_) r_complete <= 1'h0;
    else r_complete <= _005_;
  always @(posedge clk)
    if (_001_) r_door_alert <= 1'h0;
    else r_door_alert <= _006_;
  always @(posedge clk)
    if (_004_) r_weight_alert <= 1'h0;
    else r_weight_alert <= _007_;
  assign complete = r_complete;
  assign direction = r_direction;
  assign door_alert = r_door_alert;
  assign out_current_floor = r_out_current_floor;
  assign weight_alert = r_weight_alert;
  assign _125_ = over_time;
  assign _143_ = reset;
  assign _126_ = over_weight;
  assign _142_ = request_floor[7];
  assign _134_ = r_out_current_floor[7];
  assign _141_ = request_floor[6];
  assign _133_ = r_out_current_floor[6];
  assign _140_ = request_floor[5];
  assign _132_ = r_out_current_floor[5];
  assign _131_ = r_out_current_floor[4];
  assign _139_ = request_floor[4];
  assign _138_ = request_floor[3];
  assign _130_ = r_out_current_floor[3];
  assign _137_ = request_floor[2];
  assign _129_ = r_out_current_floor[2];
  assign _136_ = request_floor[1];
  assign _128_ = r_out_current_floor[1];
  assign _127_ = r_out_current_floor[0];
  assign _135_ = request_floor[0];
  assign _005_ = _070_;
  assign _002_ = _067_;
  assign _001_ = _066_;
  assign _003_ = _068_;
  assign _006_ = _071_;
  assign _004_ = _069_;
  assign _007_ = _072_;
  assign _074_ = in_current_floor[0];
  assign _000_[0] = _058_;
  assign _075_ = in_current_floor[1];
  assign _000_[1] = _059_;
  assign _076_ = in_current_floor[2];
  assign _000_[2] = _060_;
  assign _077_ = in_current_floor[3];
  assign _000_[3] = _061_;
  assign _078_ = in_current_floor[4];
  assign _000_[4] = _062_;
  assign _079_ = in_current_floor[5];
  assign _000_[5] = _063_;
  assign _080_ = in_current_floor[6];
  assign _000_[6] = _064_;
  assign _081_ = in_current_floor[7];
  assign _000_[7] = _065_;
  assign _057_ = _073_;
endmodule
